@model User

@{
ViewData["Title"] = "Account";
}

<div class="account-container">

    <div class="person-info-grid">
        <div class="form-prop">
            <div class="form-group">
                <label asp-for="@Model.UserName">Username</label>
                <input disabled asp-for="@Model.UserName" type="text" class="form-control">
            </div>
            <div class="button-container">
                <button class="edit-button">Edit</button>
                <button class="save-button">Save</button>
            </div>
        </div>
        <div class="form-prop">
            <div class="form-group">
                <label asp-for="@Model.Email">Email</label>
                <input disabled asp-for="@Model.Email" type="text" class="form-control">
            </div>
            <div class="button-container">
                <button class="edit-button">Edit</button>
                <button class="save-button">Save</button>
            </div>
        </div>
        <div class="form-prop">
            <div class="form-group">
                <label asp-for="@Model.Age">Age</label>
                <input disabled asp-for="@Model.Age" type="text" class="form-control">
            </div>
            <div class="button-container">
                <button class="edit-button">Edit</button>
                <button class="save-button">Save</button>
            </div>
        </div>
        <div class="form-prop">
            <div class="form-group">
                <label asp-for="@Model.Address.Country">Country</label>
                <input disabled asp-for="@Model.Address.Country" type="text" class="form-control">
            </div>
            <div class="button-container">
                <button class="edit-button">Edit</button>
                <button class="save-button">Save</button>
            </div>
        </div>
        <div class="form-prop">
            <div class="form-group">
                <label asp-for="@Model.Address.City">City</label>
                <input disabled asp-for="@Model.Address.City" type="text" class="form-control">
            </div>
            <div class="button-container">
                <button class="edit-button">Edit</button>
                <button class="save-button">Save</button>
            </div>
        </div>
        <div class="form-prop">
            <div class="form-group">
                <label asp-for="@Model.Address.State">Street</label>
                <input disabled asp-for="@Model.Address.State" type="text" class="form-control">
            </div>
            <div class="button-container">
                <button class="edit-button">Edit</button>
                <button class="save-button">Save</button>
            </div>
        </div>
    </div>

    <div class="imageGrid">
        @foreach (var path in Model.ProfilePicPaths)
        {
        <div class="imageWrapper">
            <img src="~/Assets/@path">
        </div>
        }
    </div>

</div>

<!-- <button class="followers-list-button">Followers</button> -->


<script>
    const editButtons = document.querySelectorAll('.edit-button');
    editButtons.forEach(editButton => {
        editButton.addEventListener('click', () => {
            const isEdit = editButton.dataset.clicked === 'true';
            const saveButton = editButton.nextElementSibling;
            const inputField = editButton.parentElement.previousElementSibling.querySelector('input');
            editButton.dataset.clicked = isEdit ? 'false' : 'true';
            if (isEdit) {
                inputField.value = inputField.dataset.originalValue;
                editButton.textContent = 'Edit';
                editButton.classList.remove('clicked');
                saveButton.classList.remove('visible');
                inputField.setAttribute('disabled', 'disabled');
            } else {
                inputField.dataset.originalValue = inputField.value;
                editButton.textContent = 'Cancel';
                editButton.classList.add('clicked');
                saveButton.classList.add('visible');
                inputField.removeAttribute('disabled');
            }
        });
    });
</script>






@* <div class="text-danger" asp-validation-summary="All"></div>
<form enctype="multipart/form-data" asp-action="UploadAvatar" asp-controller="User" method="post" class="account-form">
    <img src="~/Assets/@Model.ProfilePicPath" alt="profile img">
    <input type="file" name="file" id="file">
    <button>Save Changes</button>
</form> *@

<style>
    .account-container {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        padding: 20px;
    }

    .imageGrid {
        width: 40%;
        float: right;
        /* Сдвигаем контейнер с изображениями вправо */
    }

    .person-info-grid {
        width: 55%;
        /* Увеличили ширину контейнера с информацией, чтобы соблюсти 5% отступ */
    }

    .form-prop {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 20px;
    }

    .form-group {
        margin-bottom: 20px;
        background: linear-gradient(to bottom right, #ff7e5f, #feb47b);
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        width: 95%;
        /* Задаем тень */
    }

    label {
        display: block;
        font-weight: bold;
        margin-bottom: 5px;
        margin-left: 10px;
    }

    input[type="text"] {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-sizing: border-box;
        background-color: #f9f9f9;
        color: #333;
    }

    input[type="text"]:disabled {
        background-color: #ddd;
        color: #777;
    }

    .button-container {
        width: 10%;
        margin-left: 10px;
        align-items: center;
    }

    .button-container button {
        max-width: 100%;
        /* Добавляем отступ между кнопками */
        padding: 8px 12px;
        /* Размеры кнопок */
        border: none;
        border-radius: 5px;
        background-color: #4CAF50;
        /* Цвет кнопок */
        color: white;
        cursor: pointer;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    }

    .button-container button:hover {
        background-color: #45a049;

        &.clicked {
            margin-top: 0px;
            display: block;
            pointer-events: all;
            background-color: rgb(240, 50, 50);
        }

        /* Цвет кнопок при наведении */
    }

    .save-button {
        display: none;
        pointer-events: none;

        &.visible {
            display: block;
            pointer-events: all;
        }
    }

    .edit-button {
        margin-top: 25%;

        &.clicked {
            margin-top: 0px;
            display: block;
            pointer-events: all;
            background-color: red;
        }
    }
</style>