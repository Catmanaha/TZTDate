@inject UserManager<User> UserManager;
@model User;

@{
    ViewData["Title"] = $"{Model.UserName}'s Details";
    var currentUser = await UserManager.GetUserAsync(User);
    var zodiacCompability = currentUser?.CompatibilityByZodiacSign(Model);
}

<div class="details-img-div">
    @foreach (var profilePicPath in @Model?.ProfilePicPaths)
    {
        <img src="~/Assets/@profilePicPath" alt="profile-pic">
    }
    @* <a href="/Chat/Chat?id=@Model.Id">Chat Now</a> *@
    <br>
</div>

<div class="details-divs">
    <div class="interests">
        <label><b>My Interests</b></label>
        <p style="margin-top: 20px;">@Model.Interests</p>
    </div>
    <div class="about-me">
        <label><b>About Me</b></label>
        <p style="margin-top: 20px;"><strong>Live in: </strong> @Model.Address</p>
        <p><strong>Name: </strong> @Model.UserName</p>
        <p><strong>Email: </strong> @Model.Email</p>
        <p><strong>Gender: </strong> @Model.Gender</p>
    </div>
    <div class="looking-for">
        <label><b>I'm Looking For</b></label>
        <p style="margin-top: 20px;">
            <strong>Searching For Ages Between: </strong>@Model.SearchingAgeStart and
            @Model.SearchingAgeEnd
        </p>
        <p><strong>Searching For: </strong> @Model.SearchingGender</p>
        <p>@Model.Description</p>

    </div>
</div>

<div class="zodiac-entities">
    <h2>Zodiac sign compability</h2>
    <h3><span class="zodiac-sign">@currentUser.GetZodiacSign()</span>   @zodiacCompability?.Type   <span class="zodiac-sign">@Model.GetZodiacSign()</span></h3>
    <div>@zodiacCompability?.Description</div>
</div>



<div class="container-calc-like">
    <div class="relationship-calc-entities" >
        <h2 class="">Relationship calculator</h2>
        <vc:RelationshipCalcComponent class="calc-result">
            @await Component.InvokeAsync("RelationshipCalcComponent",
            Model.UserName)
        </vc:RelationshipCalcComponent>
    </div>

    <div>
        <button type="button" class="like-button">Like</button>
        <script>
            const likeButton = document.querySelector('.like-button');
            likeButton.addEventListener('click', () => {
                const isLiked = likeButton.dataset.liked === 'true';
                likeButton.dataset.liked = isLiked ? 'false' : 'true';
                if (isLiked) {
                    likeButton.classList.remove('liked');
                    likeButton.textContent = 'Like';
                } else {
                    likeButton.classList.add('liked');
                    likeButton.textContent = 'Unlike';
                }
            });
        </script>
    </div>
</div>

<style>
    .details-img-div {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        padding: 20px;
        user-select: none;
    }

    .details-img-div a {
        margin-bottom: 30px;
        margin-top: 18px;
        color: #fff;
        background-color: #346931;
        text-decoration: none;
        width: 400px;
        padding: 5px 15px;
        border-radius: 10px;
        user-select: none;
    }

    .details-img-div a:hover {
        transition: 0.4s ease;
        background-color: #094206;
        user-select: none;
    }

    .details-img-div img {
        width: calc(33.33% - 20px);
        max-height: 300px;
        margin-bottom: 20px;
        object-fit: contain;
        border: 2px solid #ddd;
        border-radius: 5px;
        user-select: none;
    }

    .details-divs {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        user-select: none;
    }

    .interests {
        display: flex;
        flex-direction: column;
        background-color: #ededed;
        border-radius: 20px;
        padding: 50px;
        text-align: center;
        width: 400px;
        user-select: none;
    }

    .looking-for {
        display: flex;
        flex-direction: column;
        background-color: #ededed;
        border-radius: 20px;
        padding: 50px;
        text-align: center;
        width: 400px;
        user-select: none;
    }

    .about-me {
        display: flex;
        flex-direction: column;
        background-color: #ededed;
        border-radius: 20px;
        padding: 50px;
        text-align: center;
        width: 400px;
        user-select: none;
    }

    .details-divs b {
        font-size: 20px;
        user-select: none;
    }

    .zodiac-entities {
        margin-left: 15%;
        margin-top: 20px;
        margin-bottom: 20px;
        background-color: #4CAF50; 
        color: white; 
        padding: 10px; 
        border: none; 
        text-align: center;
        display: inline-block;
        font-size: 16px; 
        cursor: pointer; 
        width: 100%; 
        max-width: 70%;
        user-select: none;
        border-radius: 10px; 
    }

    

    .zodiac-entities:hover {
        background-color: #45a049;
    }

    .zodiac-entities h2, .zodiac-entities h3 {
        margin: 0; 
    }

    .relationship-calc-entities {
        margin-left: 35%;
        margin-bottom: 20px;
        background-color: #4CAF50; 
        color: white; 
        padding: 10px; 
        border: none; 
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px; 
        cursor: pointer; 
        width: 100%; 
        max-width: 30%;
        pointer-events: none;
        border-radius: 10px; 
        user-select: none;
    }

    .calc-result {
        font-size: xx-large;
        color: yellow;
    }

    .like-button {
          /* General button styles */
        display: inline-block; /* Allow text to wrap around the button */
        padding: 10px 20px; /* Add padding for content */
        border: none; /* Remove default border */
        border-radius: 50px; /* Create a rounded shape */
        cursor: pointer; /* Indicate clickable action */
        transition: background-color 0.3s ease; /* Smooth transition on hover */
        margin: 50%;

        /* Default (unliked) state */
        background-color: #17e41b; /* Light gray background */
        color: #333; /* Dark gray text */

        /* Liked state */
        &.liked {
            background-color: #ff4d4d; /* Red background on like */
            color: #fff; /* White text on like */
        }

        /* Hover effect */
        &:hover {
            background-color: #cfcfcf; /* Slightly darker background on hover */
        }
    }

    .container-calc-like {
        display: flex;
    }

    .zodiac-sign {
        font-weight: 900;
        text-shadow: 4px 4px 8px rgba(255, 0, 0, 0.7);
        font-style: italic;
        color: red;
    }
</style>